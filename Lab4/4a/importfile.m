function data = importfile(filename, attributes, delimiter, startRow, endRow)
%IMPORTFILE Import numeric data from a data file as a matrix.
%   data = IMPORTFILE(FILENAME, attributes) Reads data from data file FILENAME for the
%   default selection having attributes columns number.
%
%   data = IMPORTFILE1(FILENAME, attributes, STARTROW, ENDROW) Reads data from rows
%   STARTROW through ENDROW of text file FILENAME having attributes columns number.
%
% Example:
%   wine = importfile('wine.data', 14, ',', 1, 178);
%
%    See also TEXTSCAN.

% Auto-generated by MATLAB on 2018/11/26 15:45:35

%% Initialize variables.
if nargin<=4
    startRow = 1;
    endRow = inf;
end

%% Format for each line of text:
%   column1: double (%f)
%	column2: double (%f)
%   column3: double (%f)
%	column4: double (%f)
%   column5: double (%f)
%	column6: double (%f)
%   column7: double (%f)
%	column8: double (%f)
%   column9: double (%f)
%	column10: double (%f)
%   column11: double (%f)
%	column12: double (%f)
%   column13: double (%f)
%   ....
%	columnAttributes: double (%f)
formatSpec = '%f';
for numCol=1:attributes-1
    formatSpec = strcat(formatSpec,'%f');
end
% For more information, see the TEXTSCAN documentation.
formatSpec = strcat(formatSpec,'%[^\n\r]');

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to the format.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
dataArray = textscan(fileID, formatSpec, endRow(1)-startRow(1)+1, 'Delimiter', delimiter, 'TextType', 'string', 'HeaderLines', startRow(1)-1, 'ReturnOnError', false, 'EndOfLine', '\r\n');
for block=2:length(startRow)
    frewind(fileID);
    dataArrayBlock = textscan(fileID, formatSpec, endRow(block)-startRow(block)+1, 'Delimiter', delimiter, 'TextType', 'string', 'HeaderLines', startRow(block)-1, 'ReturnOnError', false, 'EndOfLine', '\r\n');
    for col=1:length(dataArray)
        dataArray{col} = [dataArray{col};dataArrayBlock{col}];
    end
end

%% Close the text file.
fclose(fileID);

%% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so no post
% processing code is included. To generate code which works for
% unimportable data, select unimportable cells in a file and regenerate the
% script.

%% Create output variable
data = [dataArray{1:end-1}];
